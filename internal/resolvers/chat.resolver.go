package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/gabrielmeloc22/go-message-api/internal/generated"
	"github.com/gabrielmeloc22/go-message-api/internal/model"
)

// Members is the resolver for the members field.
func (r *chatResolver) Members(ctx context.Context, obj *model.Chat) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Members - members"))
}

// NewChat is the resolver for the newChat field.
func (r *mutationResolver) NewChat(ctx context.Context, input model.NewChatInput) (*model.Chat, error) {
	panic(fmt.Errorf("not implemented: NewChat - newChat"))
}

// Chats is the resolver for the chats field.
func (r *queryResolver) Chats(ctx context.Context) ([]*model.Chat, error) {
	panic(fmt.Errorf("not implemented: Chats - chats"))
}

// Chat returns generated.ChatResolver implementation.
func (r *Resolver) Chat() generated.ChatResolver { return &chatResolver{r} }

type chatResolver struct{ *Resolver }
